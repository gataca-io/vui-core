name: Go Build

on:
  push:
    branches: CI

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}
      login: jose-gataca
    steps:
      - name: Apply netrc creds
        uses: little-core-labs/netrc-creds@v1
        with:
          creds: |
            [
              {
                "machine": "github.com",
                "login": "${{ env.login }}",
                "password": "${{ secrets.JOSE_TOKEN }}"
              },
              {
                "machine": "api.github.com",
                "login": "${{env.login}}",
                "password": "${{ secrets.JOSE_TOKEN }}"
              }
            ]
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15
        id: go

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: ./src/github.com/${{ github.repository }}


      - name: Get dependencies
        working-directory: ./src/github.com/${{ github.repository }}
        run: |
          if [ -f Gopkg.toml ]; then
              mkdir -p $GOPATH/bin
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              $GOPATH/bin/dep ensure -v
          fi
      - name: Get Version
        working-directory: ./src/github.com/${{ github.repository }}
        run: |
          VERSION=$(cat version)
          echo "::set-env name=version::${VERSION}-SNAPSHOT"
      - name: Build docker
        uses: docker/build-push-action@v1
        with:
          path: ./src/github.com/${{ github.repository }}
          dockerfile: build/Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ github.repository }}
          tags: ${{ env.version }}

      - uses: anchore/scan-action@master
        with:
          image-reference: "${{ github.repository }}:${{ env.version }}"
          dockerfile-path: "./src/github.com/${{ github.repository }}/build/Dockerfile"
          fail-build: true
          include-app-packages: true

      - name: Scan with Phonito Security
        uses: phonito/phonito-scanner-action@master
        with:
          image: "${{ github.repository }}:${{ env.version }}"
          phonito-token: '${{ secrets.PHONITO_TOKEN }}'

      - name: anchore inline scan JSON results
        run: for j in `ls ./anchore-reports/*.json`; do echo "---- ${j} ----"; cat ${j}; echo; done

      - name: ZAP Vulnerability Scan
        uses: zaproxy/action-baseline@v0.3.0
        with:
          target: 'https://connect.dev.gataca.io:9090'

      - name: Get PR number
        if: ${{ always() }}
        run: |
          PR_NB=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          echo '${PR_NB}' >> PR_NUMBER
          echo '${{ job.status }}'
          if [ "${{ job.status }}" == "success" ]; then
            echo 'READY' >> TEXT_RESULT
          else
            echo 'INVALID' >> TEXT_RESULT
          fi
      - name: Notify slack OK
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}
        uses: pullreminders/slack-action@master
        if: ${{ always() }}
        with:
          args: '{\"channel\":\"GTM2M6UGL\",\"text\":\"Version #${{ env.version }} for repo ${{ github.repository }} built and deployed in DEV. Triggered by ${{ github.actor }}\"}'
