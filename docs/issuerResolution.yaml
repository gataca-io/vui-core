openapi: 3.0.1

info:
  title: VUI Registries Resolution API
  description: API to manage all the Trusted Registries
  version: 1.0.0
  
servers:
  - url: https://vui.gataca.io/v1
    description: Gataca's implementor server
  - url: http://staging-api.example.com
    description: Optional server description, e.g. Internal staging server for testing

tags:
  - name: Trusted Issuers
    description: API to manage all the information related to the Trusted Issuers

paths:
  /api/v1/trusted-issuers:
    get:
      tags:
      - Trusted Issuers
      summary: Get the information related to the Trusted Issuers
      description: Retrieve the information related to the Trusted Issuers. That information
        must contains all the legal information, API services, eIDAS certificates,
        ... that provide a trusted relation with the legal entity.
      parameters:
      - name: schema
        in: query
        schema:
          type: string
        description: Schema accredited to be issued by the Trusted Issuer
      responses:
        200:
          description: Trusted Issuer list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/models.TrustedIssuerList'
        500:
          description: Serverside error processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.ResponseMessage'
  
  /api/v1/trusted-issuers/{id}:
    get:
      tags:
      - Trusted Issuers
      summary: Get the information related to a concrete Trusted Issuer
      description: Retrieve the information related to the Trusted Issuers. That information
        must contains all the legal information, API services, eIDAS certificates,
        ... that provide a trusted relation with the legal entity.
      parameters:
      - name: id
        in: path
        description: Trusted Issuer ID
        required: true
        schema:
          type: string
      responses:
        200:
          description: Trusted Issuer information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.TrustedIssuer'
        404:
          description: Invalid or nonexisting Trusted Issuer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.ResponseMessage'
        500:
          description: Serverside error processing the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/models.ResponseMessage'

  /health:
    get:
      summary: Returns if the service is up and running.
      description: Optional extended description in CommonMark or HTML.
      responses:
        200:
          description: Server UP
          content: {}

  /version:
    get:
      summary: Returns the current version of the service.
      description: Optional extended description in CommonMark or HTML.
      responses:
        200:
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: object

components:
  schemas:
    models.TrustedIssuerList:
      type: object
      required:
      - trustedIssuers
      properties:
        'proof':
          type: array
          items:
            $ref: '#/components/schemas/models.Proof'
        'trustedIssuers':
          type: array
          items:
            $ref: '#/components/schemas/models.TrustedIssuer'
    models.TrustedIssuer:
      required:
      - '@context'
      - accreditations
      - dids
      - organizationInfo
      type: object
      properties:
        '@context':
          type: string
          example: https://gataca.io/schemas/tir/2020/v1
        accreditations:
          type: array
          items:
            $ref: '#/components/schemas/models.Accreditation'
        eidasCertificates:
          type: array
          items:
            $ref: '#/components/schemas/models.EidasCertificate'
        dids:
          type: array
          example:
          - did:gatc:2abcd...ABC#123456789
          - did:ebsi:2abcd...ABC#123456789
          items:
            type: string
        domain:
          type: string
          example: Education
        id:
          type: string
          example: e20993d1-2430-462b-a9d0-2f2ead3345f8
        organizationInfo:
          $ref: '#/components/schemas/models.OrganizationInfo'
        proof:
          type: array
          items:
            $ref: '#/components/schemas/models.Proof'
        serviceEndpoints:
          type: array
          items:
            $ref: '#/components/schemas/models.ServiceEndpoint'
    models.ResponseMessage:
      type: object
      properties:
        message:
          type: string
          example: Some description message
    models.EidasCertificate:
      type: object
      properties:
        eidasCertificateIssuerNumber:
          type: string
          example: "123456"
        eidasCertificatePem:
          type: string
          example: <PEM-ENC-CERT>
        eidasCertificateSerialNumber:
          type: string
          example: "123456"
    models.ServiceEndpoint:
      type: object
      properties:
        id:
          type: string
          example: did:gatc:2abcd...ABC#123456789#openid
        serviceEndpoint:
          type: string
          example: https://openid.example.com/
        type:
          type: string
          example: OpenIdConnectVersion1.0Service
    models.OrganizationInfo:
      type: object
      required:
      - legalName
      - domainName
      properties:
        areaGroup:
          type: string
          example: "Education"
        EORI:
          type: string
          example: AT123456789101
        discoveryURL:
          type: string
          example: https://example.organization.com
        domainName:
          type: string
          example: https://example.organization.com
        identifierBag:
          type: string
          example: ddd1ebce-8305-4edf-b6b6-7588aa021311
        legalAddress:
          type: string
          example: Example Street, 38, 3 Izq, Madrid, Spain
        legalName:
          type: string
          example: Example Legal Name
        legalPersonalIdentifier:
          type: string
          example: "123456789"
        LEI:
          type: string
          example: 12341212EXAMPLE34512
        preferredDisplay:
          $ref: '#/components/schemas/models.preferredDisplay'
        SEED:
          type: string
          example: AT12345678910
        SIC:
          type: string
          example: "1234"
        taxReference:
          type: string
          example: "123456789"
        VATRegistration:
          type: string
          example: ATU12345678
    models.preferredDisplay:
      type: object
      required:
      - preferredName
      properties:
        background:
          $ref: '#/components/schemas/models.Background'
        logo:
          type: string
          example: https://example.org/logo.jpg
        preferredName:
          type: string
          example: "Brand Name"
        style:
          $ref: '#/components/schemas/models.Style'
    models.Background:
      type: object
      properties:
        color:
          type: string
          example: '#ABCDEF'
        uri:
          type: string
          example: https://example.org/background.jpg
    models.Style:
      type: object
      properties:
        color:
          type: string
          example: '#ABCDEF'
        fontFamily:
          type: string
          example: arial
    models.Proof:
      type: object
      properties:
        created:
          type: string
          format: date-time
          example: 2021-06-21T18:05:02Z
        jws:
          type: string
          example: abc...123=
        proofPurpose:
          type: string
          example: assertionMethod
        type:
          type: string
          example: EidasSeal2021
        verificationMethod:
          type: string
          example: did:gatc:2abcd...ABC#123456789
    models.Accreditation:
      type: object
      required:
      - accreditor
      - validFrom
      properties:
        accreditor:
          type: string
          example: did:gatc:2abcd...ABC
        createdAt:
          type: string
          format: date-time
          example: 2021-06-21T18:05:02Z
        credentialSchema:
          type: string
          example: https://gataca.io/tsr/exampleSchema1.json
        evidence:
          $ref: '#/components/schemas/models.CredentialEvidence'
        expirationDate:
          type: string
          format: date-time
          example: 2022-06-21T18:05:02Z
        levelOfTrust:
          type: integer
          description: Level of Trust
          example: 2
        proof:
          type: array
          items:
            $ref: '#/components/schemas/models.Proof'
        validFrom:
          type: string
          format: date-time
          example: 2021-06-21T18:05:02Z
    models.CredentialEvidence:
      type: object
      properties:
        evidenceDocuments:
          type: array
          example:
          - Passport
          items:
            type: string
        documentPresence:
          type: string
          example: Physical
        id:
          type: string
          example: https://essif.europa.eu/tsr/evidence/f2aeec97-fc0d-42bf-8ca7-0548192d4231
        subjectPresence:
          type: string
          example: Physical
        type:
          type: array
          example:
          - DocumentVerification
          items:
            type: string

